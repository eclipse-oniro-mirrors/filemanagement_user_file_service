# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/filemanagement/user_file_service/filemanagement_aafwk.gni")

ohos_unittest("medialibrary_file_access_test") {
  module_out_path = "filemanagement/user_file_service"

  sources = [ "medialibrary_file_access_test.cpp" ]

  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/context",
    "${user_file_service_path}/interfaces/inner_api/file_access/include",
    "//third_party/googletest/googlemock/include/gmock",
    "${access_token_path}/frameworks/accesstoken:accesstoken_communication_adapter_cxx/",
  ]

  configs = [ "//build/config/compiler:exceptions" ]

  deps = [
    "${ability_runtime_path}/frameworks/native/ability/native:abilitykit_native",
    "${ability_runtime_path}/frameworks/native/appkit:app_context",
    "${user_file_service_path}/interfaces/inner_api/file_access:file_access_extension_ability_kit",
    "//third_party/googletest:gmock_main",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:app_manager",
    "ability_runtime:runtime",
    "ability_runtime:wantagent_innerkits",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "image_framework:image_native",
    "ipc:ipc_core",
    "ipc_js:rpc",
    "samgr:samgr_proxy",
  ]

  resource_config_file =
      "${user_file_service_path}/test/unittest/resources/ohos_test.xml"
}

ohos_unittest("external_file_access_test") {
  module_out_path = "filemanagement/user_file_service"

  sources = [ "external_file_access_test.cpp" ]

  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/context",
    "//third_party/googletest/googlemock/include/gmock",
    "${user_file_service_path}/interfaces/inner_api/file_access/include",
  ]

  configs = [ "//build/config/compiler:exceptions" ]

  deps = [
    "${ability_runtime_path}/frameworks/native/ability/native:abilitykit_native",
    "${ability_runtime_path}/frameworks/native/appkit:app_context",
    "${access_token_path}/frameworks/accesstoken:accesstoken_communication_adapter_cxx",
    "${user_file_service_path}/interfaces/inner_api/file_access:file_access_extension_ability_kit",
    "//third_party/googletest:gmock_main",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:app_manager",
    "ability_runtime:runtime",
    "ability_runtime:wantagent_innerkits",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "ipc:ipc_core",
    "ipc_js:rpc",
    "samgr:samgr_proxy",
  ]
}

ohos_unittest("abnormal_file_access_test") {
  module_out_path = "filemanagement/user_file_service"

  sources = [ "abnormal_file_access_test.cpp" ]

  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/context",
    "//third_party/googletest/googlemock/include/gmock",
    "${user_file_service_path}/interfaces/inner_api/file_access/include",
  ]

  configs = [ "//build/config/compiler:exceptions" ]

  deps = [
    "${ability_runtime_path}/frameworks/native/ability/native:abilitykit_native",
    "${ability_runtime_path}/frameworks/native/appkit:app_context",
    "${access_token_path}/frameworks/accesstoken:accesstoken_communication_adapter_cxx",
    "${user_file_service_path}/interfaces/inner_api/file_access:file_access_extension_ability_kit",
    "//third_party/googletest:gmock_main",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:app_manager",
    "ability_runtime:runtime",
    "ability_runtime:wantagent_innerkits",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]
}

group("user_file_service_unit_test") {
  testonly = true

  deps = [
    ":abnormal_file_access_test",
    ":external_file_access_test",
  ]
}
